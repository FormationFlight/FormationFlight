name: Build FormationFlight
on: [push, pull_request]
jobs:
  targets:
    runs-on: ubuntu-latest
    outputs:
      targets: ${{ steps.set-targets.outputs.targets }}
    steps:
    - name: Checkout
      uses: actions/checkout@v3
    - id: set-targets
      run: echo "targets=[$( (grep '\[env:.*UART\]' targets/*.ini) | sed 's/.*://' | sed s/.$// | egrep "(STLINK|UART)" | grep -v DEPRECATED | tr '\n' ','  | sed 's/,$/"\n/' | sed 's/,/","/'g | sed 's/^/"/')]" >> $GITHUB_OUTPUT && echo $GITHUB_OUTPUT

  build:
    needs: targets
    strategy:
      fail-fast: false
      matrix:
        target: ${{fromJSON(needs.targets.outputs.targets)}}
    runs-on: ubuntu-latest
    steps:

    - name: Inject slug/short variables
      uses: rlespinasse/github-slug-action@v4

    - name: Checkout
      uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'

    - name: Cache pip
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ matrix.target }}

    - name: Install PlatformIO
      run: |
        python -m pip install --upgrade pip
        pip install platformio
        pip install wheel

    - name: Cache PlatformIO
      uses: actions/cache@v3
      with:
        path: ~/.platformio
        key: ${{ runner.os }}-platformio

    - name: Run PlatformIO
      run: |
        mkdir -p ~/artifacts/firmware
        platformio pkg install --platform native
        platformio pkg update
        pio run -e ${{ matrix.target }}
        OUTDIR=~/artifacts/`echo ${{ matrix.target }} | sed s/_via.*//`
        mkdir -p $OUTDIR
        mv .pio/build/${{ matrix.target }}/firmware.bin $OUTDIR >& /dev/null || :
        # copy the common ESP32 files
        if [[ ${{matrix.target}} == *ESP32* ]] ; then
          cp ~/.platformio/packages/framework-arduinoespressif32/tools/partitions/boot_app0.bin ~/artifacts/firmware/
          mv .pio/build/${{ matrix.target }}/partitions.bin ~/artifacts/firmware/
          mv .pio/build/${{ matrix.target }}/bootloader.bin ~/artifacts/firmware/bootloader_dio_40m.bin
        fi

    - name: Store Artifacts
      uses: actions/upload-artifact@v3
      with:
        name: firmware
        path: ~/artifacts/**
      continue-on-error: true